{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabriel.barbosa/Documents/Reposito\\u0301rios/tic-tac-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      step: history.lenght,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: [desc, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", status, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", moves, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 14\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 125,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/gabriel.barbosa/Documents/Repositórios/tic-tac-react/src/index.js"],"names":["React","ReactDOM","Game","Component","constructor","props","state","history","squares","Array","fill","stepNumber","xIsNext","handleClick","i","slice","current","length","calculateWinner","setState","concat","step","lenght","jumpTo","render","winner","moves","map","move","desc","status","Square","onClick","value","Board","renderSquare","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Game extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  };\n\n  handleClick(i){\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]){\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X': \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      step: history.lenght,\n      xIsNext: !this.state.xIsNext,\n    })\n  }\n\n    jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares)\n\n    const moves = history.map((step, move ) =>{\n      const desc = move ?\n        'Go to move #' + move: \n        'Go to game start';\n        return(\n          <li key={move}>\n            <button onClick={(() => this.jumpTo(move))}>{desc} </button>\n          </li> \n        );\n    });\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } \n    else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className='game'>\n        <div className='game-board'>\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n           />\n        </div>\n        <div className='game-info'>\n          <div> {status} </div>\n          <ol> {moves} </ol>\n        </div>\n      </div>\n    )\n  }\n}\n\n  function Square(props){\n    return(\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    )\n  }\n  \n  class Board extends React.Component {\n\n    renderSquare(i) {\n      return <Square \n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />;\n    }\n  \n    render() {\n\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  "]},"metadata":{},"sourceType":"module"}